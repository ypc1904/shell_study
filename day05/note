参考教材《高级Bash脚本编程指南》

page 48

1.操作符：&

作用1：后台运行命令，一个命令后边跟一个& 表示在后台运行。
ypc@ypc-XiaoMai-Series:~/shell/day05$ sleep 10 & 
[1] 3376
ypc@ypc-XiaoMai-Series:~/shell/day05$ 
[1]+  Done                    sleep 10

在一个脚本中，命令和循环都可能运行在后台
eg: 3-3: 后台运行一个循环
参见代码:d05_1.sh
注：导致脚本逻辑不正常的原因在于：在一个脚本内后台运行一个命令，有可能造成这个脚本的挂起，等待一个按键响应。
解决方案：参见page 190 wait命令

2.操作符，逻辑与 &&
与-逻辑操作：在一个条件测试结构中，只有在条件测试结构的两边结果都为true的时候，&&操作才会返回0(代表success).

3.操作符: -
作用1：作为命令参数选项提供，前缀，在所有的命令内如果想使用选项参数的话，前面都需要加上"-".
COMMADN -[option1][option2][...]
ls -al
sort -dfu $filename
补充：sort -d,--dictionary-order: 排序时.处理英文字母，数字及空格字符外，忽略其他的字符
	  sort -f,--ignore-case: 排序时，将小写字母视作为大写字母
	  sort -u, --unique：意味着唯一的，输出的结果可以去重
set -- $variable
补充：逻辑判断，文件比较符
-e 判断文件对象是否存在
-d 判断文件对象是否存在，并且为目录
-f 判断文件对象是否存在，并且为常规文件
-L 判断文件对象是否存在，并且为符号链接
-h 判断文件对象是否存在，并且为软链接
-s 判断文件对象是否存在，并且长度不为0
-r 判断文件对象是否存在，并且可读
-w 判断文件对象是否存在，并且可写
-x 判断文件对象是否存在，并且可执行
-O 判断文件对象是否存在，并且属于当前用户
-G 判断文件对象是否存在，并且属于当前用户组
-nt 判断file1是否比file2新: [ "./file1" -nt "./file2" ]
-ot 判断file1是否比file2旧: [ "./file1" -nt "./file2" ]                 


